//
// CURSO 2015-2016
// Alba Moreno Ontiveros
// 
// Cola.cpp
// 
//
/***************************************************************************/

/********************************************************************************************/
/*******************************************************************************************/
//
//	Constructores y destructor
//	
/********************************************************************************************/
/*******************************************************************************************/
//sin argumentos, Cola vacía
#include "Cola.h"
#include <iostream>

using namespace std;

CCola :: CCola(){
	num_nodos = 0;
	ReservaMem();
}

CCola :: ~CCola(){
	LiberaMem();
}

/********************************************************************************************/
/*******************************************************************************************/
//
//	MÉTODOS PÚBLICOS
//	
/********************************************************************************************/
/*******************************************************************************************/

bool CCola :: ColaVacia()const{
	bool vacio = false;

	if(!l)
		vacio = true;

	return(vacio);
}

/********************************************************************************************/
/*******************************************************************************************/

void CCola :: AniadeValor(TipoBase valor){
	if(!l){
		ReservaPrimerNodo(valor);
	}
	else{
		PNodo aux = l;
		PNodo tmp = new Nodo;
		tmp->info = valor;
	
		while(aux != 0){
			aux = aux->sig;
		}
		aux->sig = tmp;
		tmp->sig = 0;
	}
}

/********************************************************************************************/
/*******************************************************************************************/

TipoBase CCola :: Extraer(){
	PNodo aux = l->sig;
	TipoBase valor = 0;

	if(l){
		valor = l->info;
		delete l;
		l = aux;
		num_nodos--;
	}
	return (valor);
}

/********************************************************************************************/
/*******************************************************************************************/

TipoBase CCola :: LeerCabecera()const{
	cout << "Cabecera-> " << l->info << endl;
}

/********************************************************************************************/
/*******************************************************************************************/
//
//	MÉTODOS PRIVADOS
//	
/********************************************************************************************/
/*******************************************************************************************/

void CCola :: ReservaMem(){
	//si no recive ningún argumento, crea una CCola vacía
	l = 0;
}

/********************************************************************************************/
/*******************************************************************************************/

void CCola :: ReservaPrimerNodo(TipoBase v){
	l = new Nodo;

	l->info = v;
	l->sig = 0;
}

/********************************************************************************************/
/*******************************************************************************************/

void CCola :: LiberaMem(){
	
	if(l) { // Prevenir de la CCola vacía

		PNodo aux = l; // Colocar aux al principio

		while (aux->sig != 0) {
			aux = aux->sig;	//adelantar aux
			delete l;	//borrar l
			l = aux;	//actualizar l
		}
		delete l; // Borrar el único nodo que queda
	}
}